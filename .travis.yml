sudo: false
language: cpp
dist: trusty
install:
 - export BASE=`pwd`
 - mkdir ${BASE}/usr
 - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget --no-check-certificate https://cmake.org/files/v3.7/cmake-3.7.1-Linux-x86_64.sh -O cmake-3.7.1-Linux-x86_64.sh; fi
 - if [ "$TRAVIS_OS_NAME" == "linux" ]; then chmod a+x cmake-3.7.1-Linux-x86_64.sh; fi
 - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./cmake-3.7.1-Linux-x86_64.sh --prefix=${BASE}/usr --skip-license; fi
 - if [ "$TRAVIS_OS_NAME" == "linux" ]; then export PATH="${BASE}/usr/bin:$PATH"; fi
 - if [ "$TRAVIS_OS_NAME" == "linux" ]; then export LD_LIBRARY_PATH="${BASE}/usr/lib:$LD_LIBRARY_PATH"; fi
 - if [ "$CXX" = "g++" ]; then export CXX="g++-6" CC="gcc-6"; fi
 - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" == "linux" ]; then export CXX="clang++-5.0" CC="clang-5.0"; fi
# boost
 - wget https://dl.bintray.com/boostorg/release/1.66.0/source/boost_1_66_0.zip && unzip -q boost_1_66_0.zip && cd boost_1_66_0 && ./bootstrap.sh && ./b2 -j3 --prefix=${BASE}/usr --with-timer --with-chrono --with-test address-model=64 install > /dev/null && cd ..
 - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget https://www.openssl.org/source/openssl-1.1.0h.tar.gz && tar xf openssl-1.1.0h.tar.gz && cd openssl-1.1.0h && ./config --prefix=${BASE}/usr && make -j2 && make install > /dev/null && cd ..; fi
 - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget https://www.openssl.org/source/openssl-1.1.0h.tar.gz && tar xf openssl-1.1.0h.tar.gz && cd openssl-1.1.0h && ./Configure darwin64-x86_64-cc --prefix=${BASE}/usr && make -j2 && make install > /dev/null && cd ..; fi

matrix:
  include:
    - os: osx
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=ON  -DMQTT_USE_WS=ON" CXXFLAGS="-Werror -g -Wall -Wextra -Wno-ignored-qualifiers"
    - os: osx
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=ON  -DMQTT_USE_WS=OFF" CXXFLAGS="-Werror -g -Wall -Wextra -Wno-ignored-qualifiers"
    - os: osx
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=OFF -DMQTT_USE_WS=ON" CXXFLAGS="-Werror -g -Wall -Wextra -Wno-ignored-qualifiers"
    - os: osx
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=OFF -DMQTT_USE_WS=OFF" CXXFLAGS="-Werror -g -Wall -Wextra -Wno-ignored-qualifiers"
    - os: linux
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=ON  -DMQTT_USE_WS=ON" CXXFLAGS="-Werror -g -Wall -Wextra -Wno-ignored-qualifiers"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
            - llvm-toolchain-trusty
          packages:
            - g++-multilib
            - gcc-multilib
            - gcc-5-multilib
            - g++-5-multilib
            - bzip2
            - clang-5.0
            - libc6-dbg
    - os: linux
      sudo: required
      compiler: clang
      env: FLAGS="-DMQTT_NO_TLS=OFF  -DMQTT_USE_WS=ON" CFLAGS="-Werror -g -Wall -Wextra -Wno-ignored-qualifiers -fsanitize=address -fno-omit-frame-pointer" CXXFLAGS="-Werror -g -Wall -Wextra -Wno-ignored-qualifiers -fsanitize=address -fno-omit-frame-pointer" LDFLAGS="-Wno-ignored-qualifiers -fsanitize=address"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
            - llvm-toolchain-trusty
          packages:
            - g++-multilib
            - gcc-multilib
            - gcc-5-multilib
            - g++-5-multilib
            - bzip2
            - clang-5.0
            - libc6-dbg
    - os: linux
      compiler: gcc
      env: FLAGS="-DMQTT_NO_TLS=ON -DMQTT_USE_WS=OFF" CXXFLAGS="-Werror -g -Wall -Wextra -Wno-ignored-qualifiers"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-multilib
            - gcc-multilib
            - gcc-6-multilib
            - g++-6-multilib
            - bzip2
            - libc6-dbg
    - os: linux
      compiler: gcc
      env: FLAGS="-DMQTT_NO_TLS=OFF -DMQTT_USE_WS=ON" CXXFLAGS="-Werror -g -Wall -Wextra -Wno-ignored-qualifiers"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-multilib
            - gcc-multilib
            - gcc-6-multilib
            - g++-6-multilib
            - bzip2
            - libc6-dbg

script:
  - mkdir build && cd build && cmake -DCMAKE_CXX_COMPILER="${CXX}" -DCMAKE_C_COMPILER="${CC}" -DCMAKE_LIBRARY_PATH="${BASE}/usr/lib" -DBOOST_ROOT="${BASE}/usr" -DOPENSSL_ROOT_DIR="${BASE}/usr" $FLAGS $CXXFLAGS $LDFLAGS .. && make -j2 VERBOSE=1 && ctest -VV
